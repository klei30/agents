generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [pgvector(map: "vector", schema: "extensions")]  
}

model Bot {
  id          String        @id @default(cuid())
  publicId    String        @unique @default(uuid())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  temperature Float         @default(0.7)
  model       String        @default("gpt-3.5-turbo")
  provider    String        @default("openai")
  embedding   String        @default("openai")
  document    BotDocument[]
  source      BotSource[]
}

model BotSource {
  id        String        @id @default(cuid())
  botId     String
  type      String        @default("website")
  content   String?
  location  String?
  isPending Boolean       @default(true)
  status    String        @default("pending")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  document  BotDocument[]
  bot       Bot           @relation(fields: [botId], references: [id])
}

model BotDocument {
  id        Int                   @id @default(autoincrement())
  sourceId  String
  botId     String
  content   String
  embedding Unsupported("vector")
  metadata  Json
  bot       Bot                   @relation(fields: [botId], references: [id])
  source    BotSource             @relation(fields: [sourceId], references: [id])
}

model User {
  user_id      Int     @id @default(autoincrement())
  username     String
  password     String
  isFirstLogin Boolean @default(true)
}
